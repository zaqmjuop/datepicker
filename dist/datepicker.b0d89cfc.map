{"version":3,"sources":["index.js"],"names":["defaultMonths","getMonths","yearNumber","Number","isSafeInteger","TypeError","months","isLeapYear","getDaysCount","year","month","count","getWeekArray","date","Date","daysCount","getFullYear","getMonth","lastMonthDaysCount","start","getDate","getDay","week","i","dateNum","push","initDatepicker","today","datepicker","document","querySelector","picker","innerText","addEventListener","input","daypicker","daypickerItems","querySelectorAll","forEach","item","day","value"],"mappings":"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","file":"datepicker.b0d89cfc.map","sourceRoot":"..","sourcesContent":["\nconst defaultMonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nconst getMonths = (yearNumber) => {\n  // 用一个数组表示某一年的12月每月有多少天\n  if (!Number.isSafeInteger(yearNumber)) throw new TypeError('param should be a year number, and type is integer');\n  const months = defaultMonths;\n  const isLeapYear = (yearNumber % 4 === 0);\n  if (isLeapYear) months[1] = 29;\n  return months;\n};\n\nconst getDaysCount = (year, month) => {\n  // 获得某一个月的天数\n  if (!Number.isSafeInteger(year)) throw new TypeError('param year should be a Integer of year');\n  if (!Number.isSafeInteger(month)) throw new TypeError('param month should be a Integer of month');\n  const months = getMonths(year);\n  const count = months[month];\n  return count;\n};\n\nconst getWeekArray = (date) => {\n  // 用数组形式表示一周 [30, 1, 2, 3, 4, 5, 6]\n  if (!(date instanceof Date)) throw new TypeError('param date should be a instance of Date');\n  const daysCount = getDaysCount(date.getFullYear(), date.getMonth());\n  const lastMonthDaysCount = getDaysCount(date.getFullYear(), (date.getMonth() - 1));\n  const start = (date.getDate() - date.getDay()) + 1;\n  const week = [];\n  for (let i = 0; i < 7; i += 1) {\n    let dateNum = start + i;\n    if (dateNum > daysCount) {\n      dateNum -= daysCount;\n    } else if (dateNum < 1) {\n      dateNum += lastMonthDaysCount;\n    }\n    week.push(dateNum);\n  }\n  return week;\n};\n\n\nconst initDatepicker = () => {\n  const today = new Date();\n  const datepicker = document.querySelector('#datepicker');\n  const picker = document.querySelector('#picker');\n  const year = document.querySelector('#year');\n  const month = document.querySelector('#month');\n  year.innerText = today.getFullYear();\n  month.innerText = today.getMonth() + 1;\n};\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initDatepicker();\n  const today = new Date();\n  const input = document.querySelector('#input');\n  const datepicker = document.querySelector('#datepicker');\n  const picker = document.querySelector('#picker');\n  const year = document.querySelector('#year').innerText;\n  const month = document.querySelector('#month').innerText;\n  const daypicker = document.querySelector('#daypicker');\n  const daypickerItems = daypicker.querySelectorAll('td');\n  daypickerItems.forEach((item) => {\n    item.addEventListener('click', () => {\n      const day = item.innerText;\n      const value = `${year}-${month}-${day}`;\n      input.value = value;\n    });\n  });\n});\n"]}